- 老版本的 Flash（指 Flash MX 2004）无法直接加载包含中文的 ActionScript 的文件，哪怕是在注释里也不行
    不过，开头加上 UTF-8 的 BOM 就可以了，因此假如碰到莫名其妙的“无法加载类型”的编译错误时，可以检查一下编码
- Apt 貌似无法使用 ActionScript 的属性，至少在 class 里的看上去不行，Object.addProperty() 这种倒是还没试过
- Apt 以及老版本的 flash 的 instanceof、prototype 等设施有点问题
- Apt 无法使用 Flash 里的 MovieClip.getNextHighestDepth()、parseInt 等函数，可以直接在游戏程序里搜索相应字符串，搜不到就是没有
- Apt 的 Array.sort 貌似和 Flash 里的好像不太一样
- Apt 看起来无法使用使用一些特殊值，比如说 Infinity 之类的，但是大概可以用 1/0 之类的造出来
- 在代码里遇到标识符的时候，假如 class 里有个同名成员，那么编译器可能会以为那指的是 this[标识符]，这可能会导致一些意想不到的情况
    比如说闭包并不会去捕获局部变量，因为编译器以为闭包里使用的是 this[标识符]，而不是那个局部变量
    更加奇怪的是调试模式下这个行为好像还不太一样
- Apt 看起来无法像 Flash 里一样检测键盘输入（这个倒是蛮容易理解的）
- Apt 看起来无法使用特殊变量 arguments，貌似会得到 undefined？对了，Steam 版的 sub_A596A0 看起来挺有趣的，有 call 和 apply 等字符串
- 在使用“原生 Flash 文本框”的时候，需要注意 “$”、“:”、“&” 这些字符都会被红警3视为字符串替换时的特殊字符，这会导致字符串消失等意想不到的情况
- 在 Apt 里，假如有某个子物体在下一帧的时候才会出现，那么，gotoFrame() 之后是无法直接使用那个子物体的
    得等 Flash 开始渲染新的一帧时才能去引用它（可以使用 onEnterFrame() 之类的函数）
    这听起来很合理，可是，至少在 Flash MX 2004 里测试时，子物体是立即可以引用的，而不需要等到下一帧……
- Apt 的文本布局比较坑，至少在尝试使用 ActionScript 调整它的时候是这样的
    它与 Flash 里的不太一样，此外 Apt 的 TextFormat 缺失 getTextExtent 方法
    人生苦短，还是直接按照像素把它们写死吧，反正又不需要搞移动端适配啥的，写死像素在游戏里并不会出问题（